buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'java'
    id "com.google.protobuf" version "0.9.4"
    id "com.github.davidmc24.gradle.plugin.avro" version "1.9.1"
    id 'com.github.johnrengelman.shadow'  version "8.1.1"
}

group = 'io.confluent.developer'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        url 'https://packages.confluent.io/maven'
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

sourceSets {
    main {
        java {
            srcDirs 'src/main/java', 'generated-sbe'
        }
    }
}

jar {
    manifest {
        attributes "Main-Class": "org.openjdk.jmh.Main"
    }
}

shadowJar {
    archiveBaseName = "serialization-benchmarks"
    archiveClassifier = ''
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:4.29.3'
    }
}

tasks.register('sbe', JavaExec) {
    systemProperty("sbe.output.dir", "generated-sbe")
    systemProperty("sbe.xinclude.aware", "true")
    group = "Execution"
    description = "Runs the SBE tool to generate code from schemas"
    classpath = configurations.runtimeClasspath
    mainClass = "uk.co.real_logic.sbe.SbeTool"
    args "src/main/resources/sbe-schema/stock-schema.xml"
}

clean.doLast {
    file('generated-sbe/baseline').deleteDir()
}

compileJava {
    dependsOn(generateProto, sbe)
}

processResources {
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
}


dependencies {
    implementation 'org.apache.kafka:kafka-clients:4.1.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.19.2'
    implementation 'net.datafaker:datafaker:2.5.1'

    implementation 'org.openjdk.jmh:jmh-core:1.37'
    implementation 'org.openjdk.jmh:jmh-generator-annprocess:1.37'
    annotationProcessor 'org.openjdk.jmh:jmh-generator-annprocess:1.37'
    implementation 'com.google.protobuf:protobuf-java:4.29.3'
    implementation 'org.apache.avro:avro:1.12.0'
    implementation 'uk.co.real-logic:sbe-all:1.35.6'
    implementation 'com.esotericsoftware:kryo:5.6.2'
    implementation 'org.apache.fory:fory-core:0.12.3'

    implementation "io.confluent:kafka-avro-serializer:8.0.0"
    implementation "io.confluent:kafka-protobuf-serializer:8.0.0"
    implementation "io.confluent:kafka-json-serializer:8.0.0"
    implementation "io.confluent:kafka-schema-registry-client:8.0.0"
    implementation "io.confluent:kafka-protobuf-provider:8.0.0"

    implementation 'org.slf4j:slf4j-simple:2.0.17'

    testImplementation 'org.junit.jupiter:junit-jupiter:6.0.0'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:6.0.0'
}

test {
    useJUnitPlatform()
    jvmArgs("--add-exports=java.base/jdk.internal.misc=ALL-UNNAMED")
}
